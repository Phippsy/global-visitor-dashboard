{
    "collab_server" : "",
    "contents" : "# Load packages \nrequire(reshape2)\nrequire(dplyr)\nrequire(ggplot2)\nrequire(devtools)\nrequire(highcharter)\n\n# server.R\n\noptions(scipen=5)\n\nshinyServer(\n  function(input, output) {\n    data(worldgeojson, package = \"highcharter\")\n    load(\"alldata.rda\")\n    countryCodes <- read.csv(\"iso-codes.csv\") %>% select(-c(4:5))\n    currentBrand <- reactive({\n      if (input$brandSelect == \"Brand 1\" ) {\n        \"Brand 1\"\n      } else {\n        \"Brand 2\"\n      }\n    })\n    \n    \n    # Getting the data\n    # Time-series data\n    fullData <- reactive({\n      currentData <- dplyr::filter(alldata, brand == input$brandSelect & date >input$dateRange[1] & date < input$dateRange[2])\n      summary <- currentData %>% group_by(countryIsoCode) %>% summarise(users = sum(users))\n      fullData <- merge(summary, countryCodes, by.x = \"countryIsoCode\", by.y = \"Alpha.2.code\")\n      names(fullData)[names(fullData)==\"Alpha.3.code\"] <- \"iso3\"\n      fullData\n    })\n    \n    rankData <- reactive({\n      data <- fullData() %>% \n        arrange(desc(users))\n      data <- data[1:10,]\n      data\n    })\n \n    downloadData <- reactive({\n      data <- fullData() %>% select(-c(1,4))\n      names(data) <- c(\"users\", \"country\")\n      data <- data %>% select(country, users) %>% arrange(desc(users))\n      data\n    })\n    \n    # Text Outputs\n    output$brandText <- renderText ({\n      paste0(\"Total users by country for \", currentBrand(),\", for the period \", input$dateRange[1], \" to \", input$dateRange[2])\n    })\n  \n    output$brandText1 <- renderText ({\n      paste0(\"Total users by country (top 10 countries only) for \", currentBrand(),\", for the period \", input$dateRange[1], \" to \", input$dateRange[2])\n    })\n    \n    # Plots  \n    # Countries map\n    output$countryChart <- renderHighchart({\n      highchart() %>% \n        hc_add_series_map(worldgeojson, fullData(), value = \"users\", joinBy = \"iso3\") %>% \n        hc_legend(enabled = TRUE) %>% \n        hc_add_theme(hc_theme_538()) %>%\n        hc_mapNavigation(enabled = TRUE)\n    })\n\n    output$downloadData <- downloadHandler(\n      filename = function() { paste0(\"CountryCounts-\",input$brandSelect, \"-\", as.character(input$dateRange[1]), \" until \", as.character(input$dateRange[2]),'.csv') },\n      content = function(file) {\n        write.csv(downloadData(), file, row.names = F)\n      }) # end downloadData     \n    \n    # Top 5 countries bar\n     output$countryBar <- renderHighchart({\n       hc <- highchart() %>%\n        hc_xAxis(categories = rankData()$country) %>%\n         hc_add_series(name = \"Country\", data = rankData()$users, type = \"column\")\n       hc\n     })\n    \n    output$downloadBar <- downloadHandler(\n      filename = function() { paste0(\"CountryCounts-\",input$brandSelect, \"-\", as.character(input$dateRange[1]), \" until \", as.character(input$dateRange[2]),'.csv') },\n      content = function(file) {\n        write.csv(downloadData(), file, row.names = F)\n      }) # end downloadData     \n\n \n    \n  })\n",
    "created" : 1475751628627.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "152331725",
    "id" : "540445DB",
    "lastKnownWriteTime" : 1475753224,
    "last_content_update" : 1475753224357,
    "path" : "~/Dropbox/3-Work/Training/Software stuff/Coding/R/portfolio/global-visitor-map/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}