jagVisitors <- get_ga_data(country = "Jaguar", daterange = c("2015-09-01", "2016-08-31"), dimensions = c("countryIsoCode"), metrics = c("users"))
library(jlR)
jagVisitors <- get_ga_data(country = "Jaguar", daterange = c("2015-09-01", "2016-08-31"), dimensions = c("countryIsoCode"), metrics = c("users"))
jagVisitors <- get_ga_data(brand = "Jaguar", daterange = c("2015-09-01", "2016-08-31"), dimensions = c("countryIsoCode"), metrics = c("users"))$data
View(jagVisitors)
write.csv(jagVisitors, file = "r-country.csv")
library(jlR); library(highcharter)
library("viridisLite")
data(worldgeojson, package = "highcharter")
data("GNI2014", package = "treemap")
?hc_add_series
data("GNI2014", package = "treemap")
install.packages("treemap")
library(treemap)
data("GNI2014", package = "treemap")
View(GNI2014)
?hc_add_series_map
head(worldgeojson)
worldgeojson$crs
worldgeojson$crs$properties
worldgeojson$`hc-transform`$default
View(GNI2014)
highchart() %>%
hc_add_series_map(worldgeojson, GNI2014, value = "population", joinBy = "iso3") %>%
hc_colorAxis(stops = dshmstops) %>%
hc_legend(enabled = TRUE) %>%
hc_add_theme(hc_theme_db()) %>%
hc_mapNavigation(enabled = TRUE)
library(jlR); library(highcharter)
library("viridisLite")
data(worldgeojson, package = "highcharter")
highchart() %>%
hc_add_series_map(worldgeojson, GNI2014, value = "population", joinBy = "iso3") %>%
hc_colorAxis(stops = dshmstops) %>%
hc_legend(enabled = TRUE) %>%
hc_add_theme(hc_theme_db()) %>%
hc_mapNavigation(enabled = TRUE)
highchart() %>%
hc_add_series_map(worldgeojson, GNI2014, value = "population", joinBy = "iso3") %>%
# hc_colorAxis(stops = dshmstops) %>%
hc_legend(enabled = TRUE) %>%
hc_add_theme(hc_theme_db()) %>%
hc_mapNavigation(enabled = TRUE)
worldgeojson$features
View(jagVisitors)
highchart() %>%
hc_add_series_map(worldgeojson, jagVisitors, value = "users", joinBy = "countryIsoCode") %>%
hc_legend(enabled = TRUE) %>%
hc_add_theme(hc_theme_db()) %>%
hc_mapNavigation(enabled = TRUE)
View(GNI2014)
countryCodes <- read.csv("iso-codes.csv")
countryCodes <- read.csv("iso-codes.csv")
View(countryCodes)
library(jlR); library(highcharter); library(dplyr)
countryCodes <- read.csv("iso-codes.csv") %>% select(-c(4:5))
View(countryCodes)
View(jagVisitors)
jagVisitors2 <- merge(jagVisitors, countryCodes, by.x = "countryIsoCode", by.y = "Alpha.2.code")
View(jagVisitors2)
jagVisitors <- merge(jagVisitors, countryCodes, by.x = "countryIsoCode", by.y = "Alpha.2.code")
names(jagVisitors)[names(jagVisitors=="Alpha.3.code")] <- "iso3"
View(jagVisitors)
jagVisitors <- merge(jagVisitors, countryCodes, by.x = "countryIsoCode", by.y = "Alpha.2.code")
names(jagVisitors)[names(jagVisitors=="Alpha.3.code")] <- "iso3"
library(jlR); library(highcharter); library(dplyr)
countryCodes <- read.csv("iso-codes.csv") %>% select(-c(4:5))
jagVisitors <- get_ga_data(brand = "Jaguar", daterange = c("2015-09-01", "2016-08-31"), dimensions = c("countryIsoCode"), metrics = c("users"))$data
jagVisitors <- merge(jagVisitors, countryCodes, by.x = "countryIsoCode", by.y = "Alpha.2.code")
names(jagVisitors)[names(jagVisitors=="Alpha.3.code")] <- "iso3"
View(jagVisitors)
names(jagVisitors)[names(jagVisitors)=="Alpha.3.code"] <- "iso3"
View(jagVisitors)
highchart() %>%
hc_add_series_map(worldgeojson, jagVisitors, value = "users", joinBy = "countryIsoCode") %>%
hc_legend(enabled = TRUE) %>%
hc_add_theme(hc_theme_db()) %>%
hc_mapNavigation(enabled = TRUE)
View(jagVisitors)
highchart() %>%
hc_add_series_map(worldgeojson, jagVisitors, value = "users", joinBy = "iso3") %>%
hc_legend(enabled = TRUE) %>%
hc_add_theme(hc_theme_db()) %>%
hc_mapNavigation(enabled = TRUE)
View(countryCodes)
countryCodes <- read.csv("iso-codes.csv") %>% select(-c(4:5))
View(countryCodes)
shiny::runApp()
# Load packages
require(reshape2)
require(dplyr)
require(ggplot2)
require(devtools)
require(highcharter)
data(worldgeojson, package = "highcharter")
countryCodes <- read.csv("iso-codes.csv") %>% select(-c(4:5))
rm(list=ls())
data(worldgeojson, package = "highcharter")
countryCodes <- read.csv("iso-codes.csv") %>% select(-c(4:5))
currentBrand <- "Jaguar"
fullData <- get_ga_data(brand = input$brandSelect, daterange = c(input$dateRange[1], input$dateRange[2]), dimensions = c("countryIsoCode"), metrics = c("users"))$data
fullData <- merge(fullData, countryCodes, by.x = "countryIsoCode", by.y = "Alpha.2.code")
names(fullData)[names(fullData)=="Alpha.3.code"] <- "iso3"
fullData
fullData <- get_ga_data(brand = currentBrand, dimensions = c("countryIsoCode"), metrics = c("users"))$data
fullData <- merge(fullData, countryCodes, by.x = "countryIsoCode", by.y = "Alpha.2.code")
names(fullData)[names(fullData)=="Alpha.3.code"] <- "iso3"
fullData
head(fullData)
highchart() %>%
hc_add_series_map(worldgeojson, jagVisitors, value = "users", joinBy = "iso3") %>%
hc_legend(enabled = TRUE) %>%
hc_add_theme(hc_theme_db()) %>%
hc_mapNavigation(enabled = TRUE)
highchart() %>%
hc_add_series_map(worldgeojson, fullData(), value = "users", joinBy = "iso3") %>%
hc_legend(enabled = TRUE) %>%
hc_add_theme(hc_theme_db()) %>%
hc_mapNavigation(enabled = TRUE)
highchart() %>%
hc_add_series_map(worldgeojson, fullData, value = "users", joinBy = "iso3") %>%
hc_legend(enabled = TRUE) %>%
hc_add_theme(hc_theme_db()) %>%
hc_mapNavigation(enabled = TRUE)
runApp()
runApp()
runApp()
runApp()
rm(list=ls())
runApp()
runApp()
runApp()
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
get_ga_data <- function(brand = "Jaguar", country = "Master",
daterange = c(Sys.Date()-30, Sys.Date()-1),
metrics = c("sessions","goal1Completions", "goal6Completions", "goal3Completions","Users", "bounceRate"),
dimensions = c("date"),
filter = NULL,
antiSample = FALSE) {
if (!require(googleAnalyticsR)) install.packages("googleAnalyticsR")
if (!require(ggplot2)) install.packages("ggplot2")
googleAnalyticsR::ga_auth()
account_list <- googleAnalyticsR::google_analytics_account_list()
account <- account_list[grepl("(UA)", account_list$webPropertyName), ]
account$viewName <- gsub("_", " ", account$viewName)
account <- account[grepl(brand, account$accountName),]
account <- account[grepl(country, account$viewName),]
viewId <- as.numeric(account$viewId[1])
message(paste("Getting GA data for web property: ", account$viewName[1], "(brand = ", brand, ")" ))
message(paste("Web Property ID: ", account$viewId[1] ))
if (is.null(filter)) {
data <- googleAnalyticsR::google_analytics_4(viewId, date_range = c(daterange[1], daterange[2]),
metrics = metrics,
dimensions = dimensions,
anti_sample = antiSample)
} else {
data <- googleAnalyticsR::google_analytics_4(viewId, date_range = c(daterange[1], daterange[2]),
metrics = metrics,
dimensions = dimensions,
filtersExpression = filter,
anti_sample = antiSample)
}
plots <- list()
for (metric in metrics) {
plot <- ggplot2::ggplot(data, aes_string(x = dimensions[1], y = metric)) + geom_line() + ggtitle(paste0(metric, " by ", dimensions[1]))
plots[[metric]] <- plot
}
results <- list()
results$plots <- plots
results$data <- data
results
}
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(jlR)
brand1 <- get_ga_data(brand = "Jaguar", daterange = c("2015-01-01", "2016-09-30"), dimensions = c("countryIsoCode"), metrics = c("users"))$data
brand2 <- get_ga_data(brand = "Land Rover", daterange = c("2015-01-01", "2016-09-30"), dimensions = c("countryIsoCode"), metrics = c("users"))$data
View(brand1)
brand1 <- get_ga_data(brand = "Jaguar", daterange = c("2015-01-01", "2016-09-30"), dimensions = c("date", "countryIsoCode"), metrics = c("users"))$data
brand2 <- get_ga_data(brand = "Land Rover", daterange = c("2015-01-01", "2016-09-30"), dimensions = c("date", "countryIsoCode"), metrics = c("users"))$data
View(brand1)
brand1again <- get_ga_data(brand = "Jaguar", daterange = c("2015-01-01", "2016-09-30"), dimensions = c("countryIsoCode"), metrics = c("users"))$data
brand2again <- get_ga_data(brand = "Land Rover", daterange = c("2015-01-01", "2016-09-30"), dimensions = c("countryIsoCode"), metrics = c("users"))$data
test <- as.Date("2015-01-01")
test
class(test)
Sys.Date()-test
?get_ga_data
View(brand1)
View(brand1again)
View(brand1)
?get_ga_data
brand1 <- get_ga_data(brand = "Jaguar", daterange = c("2015-01-01", "2016-09-30"), dimensions = c("date", "countryIsoCode"), metrics = c("users"))$data
library(jlR)
# Collect mucho data
brand1 <- get_ga_data(brand = "Jaguar", daterange = c("2015-01-01", "2016-09-30"), dimensions = c("date", "countryIsoCode"), metrics = c("users"))$data
brand2 <- get_ga_data(brand = "Land Rover", daterange = c("2015-01-01", "2016-09-30"), dimensions = c("date", "countryIsoCode"), metrics = c("users"))$data
test <- as.Date("2015-01-01")
Sys.Date()-test
brand1$brand <- "Brand 1"
brand2$brand <- "Brand 2"
alldata <- rbind(brand1, brand2)
View(alldata)
?save
save(alldata, file = "alldata.rda")
rm("alldata")
load("alldata.rda")
currentData <- filter(alldata, brand = "Brand 1" && date > "2015-09-01" & date < "2015-12-01")
currentData <- filter(alldata, brand = "Brand 1" && date > "2015-09-01" && date < "2015-12-01")
currentData <- filter(alldata, brand == "Brand 1" && date > "2015-09-01" && date < "2015-12-01")
currentData <- dplyr::filter(alldata, brand == "Brand 1" && date > "2015-09-01" && date < "2015-12-01")
View(currentData)
currentData <- dplyr::filter(alldata, brand == "Brand 1"
)
currentData <- dplyr::filter(alldata, brand == "Brand 1" && date > as.Date("2015-09-01") && date < as.Date("2015-12-01"))
currentData <- dplyr::filter(alldata, brand == "Brand 1" & date > as.Date("2015-09-01") & date < as.Date("2015-12-01"))
shiny::runApp()
runApp()
shiny::runApp()
runApp()
load("alldata.rda")
runApp()
currentData <- dplyr::filter(alldata, brand == "Brand 1" & date > as.Date("2015-09-01") & date < as.Date("2015-12-01"))
fullData <- merge(currentData, countryCodes, by.x = "countryIsoCode", by.y = "Alpha.2.code")
countryCodes <- read.csv("iso-codes.csv") %>% select(-c(4:5))
fullData <- merge(currentData, countryCodes, by.x = "countryIsoCode", by.y = "Alpha.2.code")
View(fullData)
summary <- currentData %>% group_by(countryIsoCode) %>% summarise(users = sum(users))
fullData <- merge(currentData, countryCodes, by.x = "countryIsoCode", by.y = "Alpha.2.code")
fullData <- merge(summary, countryCodes, by.x = "countryIsoCode", by.y = "Alpha.2.code")
View(fullData)
runApp()
names(fullData)[names(fullData)=="Alpha.3.code"] <- "iso3"
View(fullData)
View(fullData)
worldgeojson$iso3
runApp()
runApp()
?runif
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
alldata$users <- alldata$users * runif(1)
save(alldata, file = "alldata.rda")
rm("alldata")
load("alldata.rda")
alldata$users <- alldata$users * runif(1)
save(alldata, file = "alldata.rda")
rm("alldata")
load("alldata.rda")
alldata$users <- alldata$users * runif(1)
save(alldata, file = "alldata.rda")
rm("alldata")
load("alldata.rda")
alldata$users <- alldata$users * runif(1)
save(alldata, file = "alldata.rda")
rm("alldata")
load("alldata.rda")
alldata$users <- alldata$users * runif(1)
save(alldata, file = "alldata.rda")
rm("alldata")
load("alldata.rda")
alldata$users <- alldata$users * runif(1)
save(alldata, file = "alldata.rda")
rm("alldata")
load("alldata.rda")
alldata$users <- alldata$users * runif(1)
save(alldata, file = "alldata.rda")
rm("alldata")
load("alldata.rda")
alldata$users <- alldata$users * runif(1)
save(alldata, file = "alldata.rda")
rm("alldata")
load("alldata.rda")
alldata$users <- alldata$users * runif(1)
View(alldata)
alldata$users <- alldata$users * 10000
?round
alldata$users <- ceiling(alldata$users)
save(alldata, file = "alldata.rda")
runApp()
alldata[alldata$countryIsoCode=="CN", ]$users <- alldata[alldata$countryIsoCode=="CN", ]$users * .5
save(alldata, file = "alldata.rda")
runApp()
